<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hash</title>
    <link href="/2023/03/05/leetcode/hash/hash/"/>
    <url>/2023/03/05/leetcode/hash/hash/</url>
    
    <content type="html"><![CDATA[<h1 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h1><blockquote><p>hash通过hash表来计数，适合比较2个type是否元素个数相同</p></blockquote><h4 id="Leetcode-242"><a href="#Leetcode-242" class="headerlink" title="Leetcode.242"></a><a href="https://leetcode.cn/problems/valid-anagram/">Leetcode.242</a></h4><p><img src="/2023/03/05/leetcode/hash/hash/image-20230305211547996.png" alt="image-20230305211547996"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">IsAnagram</span><span class="hljs-params">(s <span class="hljs-type">string</span>, t <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br>result := <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">int</span>&#123;&#125;<br><span class="hljs-keyword">for</span> _, i := <span class="hljs-keyword">range</span> s &#123;<br>result[<span class="hljs-type">string</span>(i)] += <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">for</span> _, i := <span class="hljs-keyword">range</span> t &#123;<br>_, status := result[<span class="hljs-type">string</span>(i)]<br><span class="hljs-keyword">if</span> status &#123;<br>result[<span class="hljs-type">string</span>(i)] -= <span class="hljs-number">1</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">for</span> key := <span class="hljs-keyword">range</span> result &#123;<br><span class="hljs-keyword">if</span> result[key] != <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">IsAnagram2</span><span class="hljs-params">(s <span class="hljs-type">string</span>, t <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br>result := [<span class="hljs-number">26</span>]<span class="hljs-type">int</span>&#123;&#125;<br><span class="hljs-keyword">for</span> _, i := <span class="hljs-keyword">range</span> s &#123;<br>result[i-<span class="hljs-type">rune</span>(<span class="hljs-string">&#x27;a&#x27;</span>)] += <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">for</span> _, i := <span class="hljs-keyword">range</span> t &#123;<br>result[i-<span class="hljs-type">rune</span>(<span class="hljs-string">&#x27;a&#x27;</span>)] -= <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">return</span> result == [<span class="hljs-number">26</span>]<span class="hljs-type">int</span>&#123;&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Leetcode-349"><a href="#Leetcode-349" class="headerlink" title="Leetcode.349"></a><a href="https://leetcode.cn/problems/valid-anagram/">Leetcode.349</a></h3><p><img src="/2023/03/05/leetcode/hash/hash/image-20230306221557894.png" alt="image-20230306221557894"></p><blockquote><p>range 数组返回的是索引,value</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Intersection</span><span class="hljs-params">(nums1 []<span class="hljs-type">int</span>, nums2 []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">var</span> result []<span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> s [<span class="hljs-number">10</span>]<span class="hljs-type">int</span><br><span class="hljs-keyword">for</span> _, value := <span class="hljs-keyword">range</span> nums1 &#123;<br>s[value] = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">for</span> _, value := <span class="hljs-keyword">range</span> nums2 &#123;<br><span class="hljs-keyword">if</span> s[value] == <span class="hljs-number">1</span> &#123;<br>s[value] = <span class="hljs-number">2</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> value := <span class="hljs-keyword">range</span> s &#123;<br><span class="hljs-keyword">if</span> s[value] == <span class="hljs-number">2</span> &#123;<br>result = <span class="hljs-built_in">append</span>(result, value)<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> result<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Leetcode-202"><a href="#Leetcode-202" class="headerlink" title="Leetcode.202"></a><a href="https://leetcode.cn/problems/happy-number/submissions/">Leetcode.202</a></h3><p><img src="/2023/03/05/leetcode/hash/hash/image-20230307221120469.png" alt="image-20230307221120469"></p><blockquote><ol><li>如果n不重复，那说明肯定有解出来的希望就需要一直循环</li><li>采用hash表 n值不能重复</li><li>go中int转string 并不是每个元素就是对于int的位数</li></ol></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">IsHappy</span><span class="hljs-params">(n <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br>result := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">int</span>]<span class="hljs-type">int</span>)<br><span class="hljs-keyword">for</span> n != <span class="hljs-number">1</span> &amp;&amp; result[n] == <span class="hljs-number">0</span> &#123;<br>sum := <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> _, value := <span class="hljs-keyword">range</span> strconv.Itoa(n) &#123;<br>b := <span class="hljs-type">int</span>(value - <span class="hljs-number">48</span>)<br>result[b] = <span class="hljs-number">1</span><br>sum += b * b<br>&#125;<br>n = sum<br>&#125;<br><span class="hljs-keyword">return</span> n == <span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Leetcode-1"><a href="#Leetcode-1" class="headerlink" title="Leetcode.1"></a><a href="https://leetcode.cn/problems/two-sum/submissions/">Leetcode.1</a></h3><p><img src="/2023/03/05/leetcode/hash/hash/image-20230308213638603.png" alt="image-20230308213638603"></p><blockquote><ol><li>利用 target - 当前 &#x3D; 已经遍历的值</li><li>采用hash表</li></ol></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">twoSum</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>, target <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br>result := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">int</span>]<span class="hljs-type">int</span>)<br><span class="hljs-keyword">for</span> key, value := <span class="hljs-keyword">range</span> nums &#123;<br>num := target - value<br><span class="hljs-keyword">if</span> _, ok := result[num]; ok &#123;<br><span class="hljs-keyword">return</span> []<span class="hljs-type">int</span>&#123;key, result[num]&#125;<br>&#125;<br>result[value] = key<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反转链表</title>
    <link href="/2023/02/28/leetcode/linkage/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
    <url>/2023/02/28/leetcode/linkage/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="反转链表"><a href="#反转链表" class="headerlink" title="反转链表"></a>反转链表</h1><blockquote><p>同名结构体也需要引用</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">make_linarray</span><span class="hljs-params">()</span></span> *linkarray.ListNode &#123;<br>head := &amp;linkarray.ListNode&#123;Val: <span class="hljs-number">7</span>, Next: <span class="hljs-literal">nil</span>&#125;<br>r := head<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1</span>; i++ &#123;<br><span class="hljs-built_in">new</span> := &amp;linkarray.ListNode&#123;Val: <span class="hljs-number">7</span>, Next: <span class="hljs-literal">nil</span>&#125;<br>r.Next = <span class="hljs-built_in">new</span><br>r = r.Next<br>&#125;<br><span class="hljs-keyword">return</span> head<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Leetcode-207"><a href="#Leetcode-207" class="headerlink" title="Leetcode.207"></a><a href="https://leetcode.cn/problems/reverse-linked-list/">Leetcode.207</a></h4><p><img src="/2023/02/28/leetcode/linkage/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/image-20230228212315772.png" alt="image-20230228212315772"></p><blockquote><ol><li>需要2个指针，1个指向当前元素，另一个指向下一个元素</li><li>需要一个临时指针，存储下一个的值</li><li>return pre即可，可以减少for的判断条件</li></ol></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">reverseList</span><span class="hljs-params">(head *ListNode)</span></span> *ListNode &#123;<br>cur := head<br><span class="hljs-keyword">var</span> pre *ListNode<br><span class="hljs-keyword">for</span> cur != <span class="hljs-literal">nil</span>&#123;<br>temp := cur.Next<br>cur.Next = pre<br>pre = cur<br>cur = temp<br>&#125;<br><span class="hljs-keyword">return</span> pre<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="交换链表节点"><a href="#交换链表节点" class="headerlink" title="交换链表节点"></a>交换链表节点</h1><p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/">Leetcode.24</a></p><p><img src="/2023/02/28/leetcode/linkage/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/image-20230301222418189.png" alt="image-20230301222418189"></p><blockquote><p>HEAD-&gt;A-&gt;B</p><p>主要通过引入头节点来操作A和B</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">SwapPairs</span><span class="hljs-params">(head *ListNode)</span></span> *ListNode &#123;<br>newhead := &amp;ListNode&#123;Next: head&#125;<br>cur := newhead<br><span class="hljs-keyword">for</span> head != <span class="hljs-literal">nil</span> &amp;&amp; head.Next != <span class="hljs-literal">nil</span> &#123;<br>cur.Next = head.Next<br>right := head.Next.Next<br><br>head.Next.Next = head<br>head.Next = right<br><br>cur = head<br>head = right<br><br>&#125;<br><span class="hljs-keyword">return</span> newhead.Next<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Leetcode-19"><a href="#Leetcode-19" class="headerlink" title="Leetcode.19"></a><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list/">Leetcode.19</a></h3><p><img src="/2023/02/28/leetcode/linkage/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/image-20230302213750366.png" alt="image-20230302213750366"></p><blockquote><p>类似于滑动窗口。</p><p>1.两个指针相隔固定的距离<code>n</code>。</p><p>2.当一个指针移到最后时，自然另一个指针就是要被删除的节点的前一个</p></blockquote><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs coq">func RemoveNthFromEnd(head *ListNode, n int) *ListNode &#123;<br>newhead := &amp;ListNode&#123;<span class="hljs-keyword">Next</span>: head&#125;<br><span class="hljs-built_in">left</span> := newhead<br><span class="hljs-built_in">right</span> := newhead<br><br><span class="hljs-keyword">for</span> i := <span class="hljs-number">1</span>; i &lt;= n; i++ &#123;<br><span class="hljs-built_in">left</span> = <span class="hljs-built_in">left</span>.<span class="hljs-keyword">Next</span><br>&#125;<br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">left</span>.<span class="hljs-keyword">Next</span> != nil &#123;<br><span class="hljs-built_in">left</span> = <span class="hljs-built_in">left</span>.<span class="hljs-keyword">Next</span><br><span class="hljs-built_in">right</span> = <span class="hljs-built_in">right</span>.<span class="hljs-keyword">Next</span><br>&#125;<br><span class="hljs-built_in">right</span>.<span class="hljs-keyword">Next</span> = <span class="hljs-built_in">right</span>.<span class="hljs-keyword">Next</span>.<span class="hljs-keyword">Next</span><br><span class="hljs-keyword">return</span> newhead<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>链表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>链表</title>
    <link href="/2023/02/22/leetcode/linkage/%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/"/>
    <url>/2023/02/22/leetcode/linkage/%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><blockquote><p>同名结构体也需要引用</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">make_linarray</span><span class="hljs-params">()</span></span> *linkarray.ListNode &#123;<br>head := &amp;linkarray.ListNode&#123;Val: <span class="hljs-number">7</span>, Next: <span class="hljs-literal">nil</span>&#125;<br>r := head<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1</span>; i++ &#123;<br><span class="hljs-built_in">new</span> := &amp;linkarray.ListNode&#123;Val: <span class="hljs-number">7</span>, Next: <span class="hljs-literal">nil</span>&#125;<br>r.Next = <span class="hljs-built_in">new</span><br>r = r.Next<br>&#125;<br><span class="hljs-keyword">return</span> head<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Leetcode-203"><a href="#Leetcode-203" class="headerlink" title="Leetcode.203"></a><a href="https://leetcode.cn/problems/remove-linked-list-elements/submissions/">Leetcode.203</a></h4><p><img src="/2023/02/22/leetcode/linkage/%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/image-20230222220244042.png" alt="image-20230222220244042"></p><blockquote><p>需要额外处理头节点需要删除的状态</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">removeElements</span><span class="hljs-params">(head *ListNode, val <span class="hljs-type">int</span>)</span></span> *ListNode &#123;<br><span class="hljs-keyword">var</span> left, right *ListNode<br>right = head<br>left = head<br><br><span class="hljs-keyword">for</span> right != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">if</span> right.Val == val &#123;<br>right = right.Next<br>left = left.Next<br><span class="hljs-keyword">continue</span><br>&#125;<br><span class="hljs-keyword">if</span> right.Next != <span class="hljs-literal">nil</span> &amp;&amp; right.Next.Val == val &#123;<br>right.Next = right.Next.Next<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>right = right.Next<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> left<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>😁创建虚拟头指针</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">removeElements</span><span class="hljs-params">(head *ListNode, val <span class="hljs-type">int</span>)</span></span> *ListNode &#123;<br>    dummyHead := &amp;ListNode&#123;&#125;<br>    dummyHead.Next = head<br>    cur := dummyHead<br>    <span class="hljs-keyword">for</span> cur != <span class="hljs-literal">nil</span> &amp;&amp; cur.Next != <span class="hljs-literal">nil</span> &#123;<br>        <span class="hljs-keyword">if</span> cur.Next.Val == val &#123;<br>            cur.Next = cur.Next.Next<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            cur = cur.Next<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> dummyHead.Next<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Leetcode-142"><a href="#Leetcode-142" class="headerlink" title="Leetcode.142"></a><a href="https://leetcode.cn/problems/linked-list-cycle-ii/">Leetcode.142</a></h3><p><img src="/2023/02/22/leetcode/linkage/%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/image-20230304182524913.png" alt="image-20230304182524913"></p><blockquote><ol><li><p>快慢指针如果快指针能追上慢指针，说明必定有环</p></li><li><p>fast可以直接走2步，这样只是循环的圈数变多，但肯定能某一个时刻相遇</p></li><li><p>环开始位置一定等于<br>$$<br>x&#x3D; (n-1)(y+z) + z<br>$$<br>x 表示链表起始到环开始位置，y表示环开始位置到快慢指针相遇点， z表示快慢指针相遇点到环开始位置</p></li></ol></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">func</span> <span class="hljs-title function_">detectCycle</span><span class="hljs-params">(head *ListNode)</span> *<span class="hljs-title function_">ListNode</span> &#123;<br>fast := head<br>slow := head<br><br><span class="hljs-keyword">for</span> fast != nil &amp;&amp; fast.<span class="hljs-keyword">Next</span> != nil &#123;<br>slow = slow.<span class="hljs-keyword">Next</span><br>fast = fast.<span class="hljs-keyword">Next</span>.<span class="hljs-keyword">Next</span><br><span class="hljs-keyword">if</span> fast == slow &#123;<br><span class="hljs-keyword">for</span> slow != head &#123;<br>slow = slow.<span class="hljs-keyword">Next</span><br>head = head.<span class="hljs-keyword">Next</span><br>&#125;<br><span class="hljs-keyword">return</span> head<br><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> nil<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>链表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑动窗口</title>
    <link href="/2023/02/20/leetcode/array/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    <url>/2023/02/20/leetcode/array/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h4 id="Leetcode-209"><a href="#Leetcode-209" class="headerlink" title="Leetcode.209"></a><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/submissions/">Leetcode.209</a></h4><p><img src="/2023/02/20/leetcode/array/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/image-20230220220559444.png" alt="image-20230220220559444"></p><ol><li><p>先获取到第一个满条件的范围</p></li><li><p>然后判断该范围内是否有更小的子数组， <code>start++</code>，<code>end</code> 保持不动</p></li><li><p>最后继续取下一个区间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">MinSubArrayLen</span><span class="hljs-params">(target <span class="hljs-type">int</span>, nums []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>start := <span class="hljs-number">0</span><br>sum := <span class="hljs-number">0</span><br>min := <span class="hljs-built_in">len</span>(nums) + <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> end := <span class="hljs-number">0</span>; end &lt; <span class="hljs-built_in">len</span>(nums); &#123;<br><br>sum += nums[end]<br><span class="hljs-keyword">if</span> sum &gt;= target &#123;<br><span class="hljs-keyword">if</span> end-start+<span class="hljs-number">1</span> &lt; min &#123;<br>min = end - start + <span class="hljs-number">1</span><br>&#125;<br>sum -= nums[start] + nums[end]<br>start++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>end++<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> min == <span class="hljs-built_in">len</span>(nums)+<span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;<br><span class="hljs-keyword">return</span> min<br>&#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数组</tag>
      
      <tag>最小长度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有序数组平方</title>
    <link href="/2023/02/16/leetcode/array/%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E5%B9%B3%E6%96%B9/"/>
    <url>/2023/02/16/leetcode/array/%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E5%B9%B3%E6%96%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="有序数组平方"><a href="#有序数组平方" class="headerlink" title="有序数组平方"></a>有序数组平方</h1><p><img src="/2023/02/16/leetcode/array/%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E5%B9%B3%E6%96%B9/2023-02-16-23-22-57-image.png"></p><ol><li><p>本身有序及最大数值只能在左右两边产生</p></li><li><p>切片长度默认为0，append或者make赋值</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">sortedSquares</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br>right := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>k := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>new_nums := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-built_in">len</span>(nums))<br><span class="hljs-keyword">for</span> left := <span class="hljs-number">0</span>; left &lt;= right; &#123;<br><span class="hljs-keyword">if</span> nums[left] * nums[left] &gt; nums[right]* nums[right] &#123;<br>new_nums[k] = nums[left] * nums[left]<br>left++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>new_nums[k] = nums[right] * nums[right]<br>right--<br>&#125;<br>k--<br>&#125;<br><span class="hljs-keyword">return</span> new_nums<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>移除元素</tag>
      
      <tag>数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二分查找</title>
    <link href="/2023/02/12/leetcode/array/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    <url>/2023/02/12/leetcode/array/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><blockquote><p>核心为确定区间位置</p></blockquote><pre><code class="hljs">对于[left, right]的左闭、右闭的区间，left==right 是存在的（while 中 left &lt;= right）nums[mid]!= targe,故不需要取mid</code></pre><h4 id="Leetcode-704"><a href="#Leetcode-704" class="headerlink" title="Leetcode.704"></a><a href="https://leetcode.cn/problems/binary-search/submissions">Leetcode.704</a></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> array<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Search</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>, target <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    left := <span class="hljs-number">0</span><br>    right := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> left &lt;= right &#123;<br>        mid := left + (right-left)/<span class="hljs-number">2</span><br>        fmt.Printf(<span class="hljs-string">&quot;mid is %d\n&quot;</span>, mid)<br>        <span class="hljs-keyword">if</span> nums[mid] == target &#123;<br>            <span class="hljs-keyword">return</span> mid<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> nums[mid] &lt; target &#123;<br>            left = mid + <span class="hljs-number">1</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> nums[mid] &gt; target &#123;<br>            right = mid - <span class="hljs-number">1</span><br>        &#125;<br><br>    &#125;<br>    fmt.Printf(<span class="hljs-string">&quot;left is %d, right is %d\n&quot;</span>, left, right)<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Leetcode-35"><a href="#Leetcode-35" class="headerlink" title="Leetcode.35"></a><a href="https://leetcode.cn/problems/search-insert-position/">Leetcode.35</a></h4><blockquote><ol><li><p>因为能大于最大值或小于最小值，说明可以为闭区间</p></li><li><p><code>return right + 1</code>  因为此时left &gt; right 那说明right 为最小值，故index为 right + 1</p></li></ol></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>, target <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    left := <span class="hljs-number">0</span><br>    right := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>    mid := <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">for</span> left &lt;= right &#123;<br>        mid = left + (right-left)/<span class="hljs-number">2</span><br><br>        <span class="hljs-keyword">if</span> nums[mid] == target &#123;<br>            <span class="hljs-keyword">return</span> mid<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> nums[mid] &lt; target &#123;<br>            left = mid + <span class="hljs-number">1</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> nums[mid] &gt; target &#123;<br>            right = mid <span class="hljs-number">-1</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> right + <span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Leetcode-59"><a href="#Leetcode-59" class="headerlink" title="Leetcode.59"></a><a href="https://leetcode.cn/problems/spiral-matrix-ii/submissions/">Leetcode.59</a></h3><blockquote><p>该题不属于二分法，但是主要应用了保持区间一致性的算法</p></blockquote><p><img src="/2023/02/12/leetcode/array/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/image-20230221235947263.png" alt="image-20230221235947263"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs go">top, bottom := <span class="hljs-number">0</span>, n<span class="hljs-number">-1</span><br>left, right := <span class="hljs-number">0</span>, n<span class="hljs-number">-1</span><br>num := <span class="hljs-number">1</span><br>tar := n * n<br>matrix := <span class="hljs-built_in">make</span>([][]<span class="hljs-type">int</span>, n)<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; n; i++ &#123;<br>matrix[i] = <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, n)<br>&#125;<br><span class="hljs-keyword">for</span> num &lt;= tar &#123;<br><span class="hljs-keyword">for</span> i := left; i &lt;= right; i++ &#123;<br>matrix[top][i] = num<br>num++<br>&#125;<br>top++<br><span class="hljs-keyword">for</span> i := top; i &lt;= bottom; i++ &#123;<br>matrix[i][right] = num<br>num++<br>&#125;<br>right--<br><span class="hljs-keyword">for</span> i := right; i &gt;= left; i-- &#123;<br>matrix[bottom][i] = num<br>num++<br>&#125;<br>bottom--<br><span class="hljs-keyword">for</span> i := bottom; i &gt;= top; i-- &#123;<br>matrix[i][left] = num<br>num++<br>&#125;<br>left++<br>&#125;<br><span class="hljs-keyword">return</span> matrix<br></code></pre></td></tr></table></figure><h3 id="Leetcode-34"><a href="#Leetcode-34" class="headerlink" title="Leetcode.34"></a><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/">Leetcode.34</a></h3><p><img src="/2023/02/12/leetcode/array/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/image-20230304194544683.png" alt="image-20230304194544683"></p><blockquote><ol><li>主要通过2分分别查找左边界和右边界</li><li>区别就是在找到target，将其作为左边界还是右边界</li></ol></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs stylus">func <span class="hljs-built_in">searchleft</span>(nums <span class="hljs-selector-attr">[]</span>int, target int) (value int) &#123;<br><span class="hljs-attribute">left</span> := <span class="hljs-number">0</span><br>rigth := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>value = -<span class="hljs-number">1</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-attribute">left</span> &lt;= rigth &#123;<br>mid := (<span class="hljs-attribute">left</span> + rigth) / <span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> &lt; target &#123;<br><span class="hljs-attribute">left</span> = mid + <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> &gt; target &#123;<br>rigth = mid - <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> == target &#123;<br>value = mid<br>rigth = mid - <span class="hljs-number">1</span><br>&#125;<br>&#125;<br>return<br>&#125;<br><br>func <span class="hljs-built_in">searchrgiht</span>(nums <span class="hljs-selector-attr">[]</span>int, target int) (value int) &#123;<br><span class="hljs-attribute">left</span> := <span class="hljs-number">0</span><br>rigth := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span><br>value = -<span class="hljs-number">1</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-attribute">left</span> &lt;= rigth &#123;<br>mid := (<span class="hljs-attribute">left</span> + rigth) / <span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> &lt; target &#123;<br><span class="hljs-attribute">left</span> = mid + <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> &gt; target &#123;<br>rigth = mid - <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">if</span> nums<span class="hljs-selector-attr">[mid]</span> == target &#123;<br>value = mid<br><span class="hljs-attribute">left</span> = mid<br>&#125;<br>&#125;<br>return<br>&#125;<br><br>func <span class="hljs-built_in">SearchRange</span>(nums <span class="hljs-selector-attr">[]</span>int, target int) <span class="hljs-selector-attr">[]</span>int &#123;<br>result := <span class="hljs-selector-attr">[]</span>int&#123;-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>&#125;<br>result<span class="hljs-selector-attr">[0]</span> = <span class="hljs-built_in">searchleft</span>(nums, target)<br>result<span class="hljs-selector-attr">[1]</span> = <span class="hljs-built_in">searchrgiht</span>(nums, target)<br>return result<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数组</tag>
      
      <tag>二分查找</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>移除元素</title>
    <link href="/2023/02/12/leetcode/array/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/"/>
    <url>/2023/02/12/leetcode/array/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h1><blockquote><p>核心为双指针</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">快指针遍历全部数据<br>慢指针指向快指针不需要移除的数据<br>最后通过切片获取长度<br></code></pre></td></tr></table></figure><h4 id="Leetcode-27"><a href="#Leetcode-27" class="headerlink" title="Leetcode.27"></a><a href="https://leetcode.cn/problems/remove-element/submissions/">Leetcode.27</a></h4><p><img src="/2023/02/12/leetcode/array/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/2023-02-16-00-27-53-image.png"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">RemoveElement</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>, val <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    left := <span class="hljs-number">0</span><br>    fast := <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> ; fast &lt; <span class="hljs-built_in">len</span>(nums); fast++ &#123;<br>        <span class="hljs-keyword">if</span> nums[fast] != val &#123;<br>            nums[left] = nums[fast]<br>            left++<br>        &#125;<br>    &#125;<br>    nums = nums[:left]<br>    <span class="hljs-keyword">return</span> left<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Leetcode-26"><a href="#Leetcode-26" class="headerlink" title="Leetcode.26"></a><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/">Leetcode.26</a></h4><p><img src="/2023/02/12/leetcode/array/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/image-20230219224236128.png"></p><p><img src="/2023/02/12/leetcode/array/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/image-20230219224247993.png"></p><blockquote><p>对于最后一位数需要将其添加nums中，因为判断的时，最后一位没有[fast+1]元素比较</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">removeDuplicates</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>slow := <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> fast := <span class="hljs-number">0</span>; fast &lt; <span class="hljs-built_in">len</span>(nums)<span class="hljs-number">-1</span>; fast++ &#123;<br><span class="hljs-keyword">if</span> nums[fast] != nums[fast+<span class="hljs-number">1</span>] &#123;<br>nums[slow] = nums[fast]<br>slow++<br>&#125;<br><br>&#125;<br>nums[slow] = nums[<span class="hljs-built_in">len</span>(nums)<span class="hljs-number">-1</span>]<br>nums = nums[:slow+<span class="hljs-number">1</span>]<br><span class="hljs-keyword">return</span> slow + <span class="hljs-number">1</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>移除元素</tag>
      
      <tag>数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/12/leetcode/array/hello-world/"/>
    <url>/2023/02/12/leetcode/array/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
